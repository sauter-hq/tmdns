
dnl Process this file with autoconf to produce a configure script.
AC_INIT(server/tmdns.c)
AM_INIT_AUTOMAKE(tmdns, 0.5.3 )

AM_CONFIG_HEADER(server/config.h)

AC_PREFIX_DEFAULT(/usr/local)

# avoid those silly /usr/local/(etc|var) paths.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

if test "$prefix" = "/usr/local" || test "$prefix" = "/usr"
then
    sysconfdir="/etc"
    localstatedir="/var"
fi

AC_ARG_ENABLE(static, [  --enable-static        Select static linkage],[
    if test "$enableval" = "yes"; then
        echo "static enabled : $enableval"
	BUILD_STATIC="-static"
	STATIC=1
        AC_DEFINE_UNQUOTED(BUILD_STATIC,1,"static build")
    fi
])

AC_ARG_ENABLE(debug, [  --enable-debug          Compile in debuging code],[
    if test "$enableval" = "yes"; then
        echo "DEBUG enabled : $enableval"
	DEBUG=1
        AC_DEFINE_UNQUOTED(DEBUG,1,"compile with debug support")
    fi
])

AC_ARG_ENABLE(netlink, [  --enable-netlink        Compile with experimental netlink stuff],[
    if test "$enableval" = "yes"; then
        echo "netlink enabled : $enableval"
	WITH_NETLINK=1
        AC_DEFINE_UNQUOTED(WITH_NETLINK,1,"compile with netlink support")
    fi
])


AC_ARG_WITH(perl, [  --with-perl=<path>      If your perl is in an unusual location ],[
    if test ! "x$withval" = "x"; then
        echo "Path to perl : $withval"
	PERL=$withval
    fi
])

dnl
dnl this macro sets default values for some dists.
dnl 
AC_DEFUN([CHECK_DIST],
[AC_MSG_CHECKING(distribution)

  # set default values. These are maybe suitable for other *IX
  DISTRIB="unknown"
  CONFIG_FILE_DEFAULT=`eval echo $sysconfdir`/tmdns.conf
  DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
  PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
  SERVICE_FILE_DEFAULT=`eval echo $sysconfdir`/tmdns.services
  DYNAMIC_SERVICE_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.services
  INIT_DIR=/etc/init.d

  if test -f "/etc/SuSE-release" ; then
    DISTRIB="SUSE"
    if test -d /sbin/init.d
    then
        INIT_DIR=/sbin/init.d
    else
        INIT_DIR=/etc/init.d
    fi
  elif test -f "/etc/pynix_version" ; then 
    DISTRIB="PYNIX"
    DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
    PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
    INIT_DIR=/etc/init.d
  elif test -f "/etc/debian_version" ; then 
    DISTRIB="DEBIAN"
    DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
    PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
    INIT_DIR=/etc/init.d
  elif test -f "/usr/lib/setup/slack*" ; then 
    DISTRIB="SLACK"
    DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
    PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
    INIT_DIR=/etc/init.d
  elif test -f "/etc/mandrake-release" ; then 
    DISTRIB="MANDRAKE"
    DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
    PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
    INIT_DIR=/etc/rc.d/init.d
  elif test -f "/etc/redhat-version" || test -x "/usr/bin/rpm" || test -x "/bin/rpm" ; then
    #
    # catch-all-redhat-alikes check.
    #
    # if you need a check for some dist that is rpm-based and differs
    # notably from redhat, put your check before this one.
    #
    DISTRIB="REDHAT"
    DEBUG_FILE_DEFAULT=`eval echo $localstatedir`/log/tmdns.debug.log
    PID_FILE_DEFAULT=`eval echo $localstatedir`/run/tmdns.pid
    INIT_DIR=/etc/rc.d/init.d
 fi

 SLACKWARE_SCRIPT=/etc/rc.d/rc.inet2
 AC_SUBST(SLACKWARE_SCRIPT)

 AC_MSG_RESULT($DISTRIB)
 AC_SUBST(DISTRIB)
 AC_DEFINE_UNQUOTED(DISTRIB,"$DISTRIB","which linux dist")

 AC_SUBST(CONFIG_FILE_DEFAULT)
 AC_DEFINE_UNQUOTED(CONFIG_FILE_DEFAULT,"$CONFIG_FILE_DEFAULT","config file name")

 AC_SUBST(DEBUG_FILE_DEFAULT)
 AC_DEFINE_UNQUOTED(DEBUG_FILE_DEFAULT,"$DEBUG_FILE_DEFAULT","filename for debug output")

 AC_SUBST(PID_FILE_DEFAULT)
 AC_DEFINE_UNQUOTED(PID_FILE_DEFAULT,"$PID_FILE_DEFAULT","default pid file")

 AC_SUBST(SERVICE_FILE_DEFAULT)
 AC_DEFINE_UNQUOTED(SERVICE_FILE_DEFAULT,"$SERVICE_FILE_DEFAULT","default service file")

 AC_SUBST(DYNAMIC_SERVICE_FILE_DEFAULT)
 AC_DEFINE_UNQUOTED(DYNAMIC_SERVICE_FILE_DEFAULT,"$DYNAMIC_SERVICE_FILE_DEFAULT","dynamic service file")

 AC_SUBST(INIT_DIR)
])

AC_SUBST(BUILD_STATIC)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
if test "$PERL" = "" 
then
AC_PATH_PROG(PERL, perl)
fi
AC_SUBST(PERL)

dnl AC_PATH_PROG(M4, m4)
dnl AC_PATH_PROG(JADE, jade)
dnl AC_PATH_PROG(JADETEX, jadetex)
dnl AC_PATH_PROG(DVIPS, dvips)
dnl AC_PATH_PROG(LYNX, lynx)

dnl Checks for libraries.
AC_CHECK_LIB(resolv, __dn_expand)
AC_CHECK_LIB(socket, socket)

AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(sys/types.h sys/select.h sys/file.h sys/time.h syslog.h unistd.h fcntl.h sys/in.h sys/sockio.h netinet/in6_var.h net/if.h ifaddrs.h inttypes.h )

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_WAIT3
AC_CHECK_FUNCS(select socket strdup strerror inet_ntop inet_pton getifaddrs freeifaddrs strerror)

CHECK_DIST

dnl AC_OUTPUT([Makefile server/Makefile doc/Makefile])
AC_OUTPUT([Makefile server/Makefile init.d/Makefile tmdns.spec])

echo    "============== Summary =============="
echo
echo    "          prefix :  $prefix"
echo    "    distribution :  $DISTRIB"
echo    "         perl is :  $PERL"
echo -n "          static :  " ; if test "x$STATIC" = "x1" ; then echo "yes" ; else echo "no" ; fi
echo -n "           debug :  " ; if test "x$DEBUG" = "x1" ; then echo "yes" ; else echo "no" ; fi
echo -n "         netlink :  " ; if test "x$WITH_NETLINK" = "x1" ; then echo "yes" ; else echo "no" ; fi

echo
echo    "====================================="
